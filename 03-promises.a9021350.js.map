{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GACTC,KAAKC,SAAW,GAGpCC,EAAAP,GAASQ,OAAOC,KAAK,uBAAwCC,OAAfP,EAAS,QAAYO,OAANN,EAAM,OAGnEG,EAAAP,GAASQ,OAAOC,KAAK,sBAAqCC,OAAfP,EAAS,QAAYO,OAANN,EAAM,M,CAKpE,IAMIO,EANAC,EAAQ,SAAAC,G,OAAYC,SAASC,cAAcF,E,EACzCG,EAAcJ,EAAM,0BACpBK,EAAaL,EAAM,yBACnBM,EAAYN,EAAM,wBACNA,EAAM,2BAIdO,iBAAiB,SAAS,SAACC,GACnCA,EAAMC,iBACN,IAAIC,EAASN,EAAYO,MACrBnB,EAAQa,EAAWM,MACnBC,EAAON,EAAUK,MACjBE,EAAQ,EAEG,IAAIC,SAAQ,W,kBAKrBC,YAAW,WACTzB,EAAc0B,EAAOxB,E,GACpBA,E,EALP,GAAuB,IAAnByB,SAASL,GAEX,IAAK,IAAIM,EAAQ,EAAGA,GAASR,EAAQQ,IAAOC,EAAAD,QAQ5CnB,EAAWqB,aAAY,WAEjBP,GAASH,GACXpB,EAAcuB,EAAOrB,GACrBqB,IACArB,EAAQyB,SAASzB,GAASyB,SAASL,IAEnCS,cAActB,E,GAGfP,E,IAOJ8B,MAAK,SAAAC,G,OAAQ5B,EAAAP,GAASQ,OAAOC,KAAK0B,E,IAClCC,OAAM,SAAAD,G,OAAQ5B,EAAAP,GAASQ,OAAOC,KAAK0B,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n\n    Notiflix.Notify.info(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  } else {\n\n    Notiflix.Notify.info(`❌ Rejected promise ${position} in ${delay}ms`);\n  }\n\n}\n\nlet getEl = selector => document.querySelector(selector);\nconst inputAmount = getEl('input[name = \"amount\"]');\nconst inputDelay = getEl('input[name = \"delay\"]');\nconst inputStep = getEl('input[name = \"step\"]');\nconst btnSubmit = getEl('button[type = \"submit\"]');\n\nlet amountId\n\nbtnSubmit.addEventListener('click', (event) => {\n  event.preventDefault();\n  let amount = inputAmount.value;\n  let delay = inputDelay.value;\n  let step = inputStep.value;\n  let index = 1;\n\n  const promis = new Promise(() => {\n\n    if (parseInt(step) === 0) {\n\n      for (let index = 1; index <= amount; index++) {\n        setTimeout(() => {\n          createPromise(index, delay);\n        }, delay);\n\n      }\n\n    } else {\n      amountId = setInterval(() => {\n\n        if (index <= amount) {\n          createPromise(index, delay);\n          index++;\n          delay = parseInt(delay) + parseInt(step);\n        } else {\n          clearInterval(amountId)\n        }\n\n      }, delay);\n    }\n\n\n  });\n\n  promis\n    .then(data => Notiflix.Notify.info(data))\n    .catch(data => Notiflix.Notify.info(data))\n\n})\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Math","random","$parcel$interopDefault","Notify","info","concat","$ce04d3a99e08e73b$var$amountId","$ce04d3a99e08e73b$var$getEl","selector","document","querySelector","$ce04d3a99e08e73b$var$inputAmount","$ce04d3a99e08e73b$var$inputDelay","$ce04d3a99e08e73b$var$inputStep","addEventListener","event","preventDefault","amount","value","step","index1","Promise","setTimeout","index","parseInt","index2","_loop","setInterval","clearInterval","then","data","catch"],"version":3,"file":"03-promises.a9021350.js.map"}