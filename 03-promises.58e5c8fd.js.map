{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAAKC,KACvB,MAAMC,EAAgBC,KAAKC,QAAU,GACrCC,YAAW,KACLH,EACFF,EAAI,C,SAAEH,E,MAAUC,IAEhBG,EAAI,C,SAAEJ,E,MAAUC,GAAQ,GAEzBA,EAAM,G,CAIb,IAAIQ,EAAQC,GAAYC,SAASC,cAAcF,GAC/C,MAAMG,EAAcJ,EAAM,0BACpBK,EAAaL,EAAM,yBACnBM,EAAYN,EAAM,wBAGxB,IAAIO,EAFcP,EAAM,2BAIdQ,iBAAiB,SAAUC,IACnCA,EAAMC,iBACN,IAAIC,EAASP,EAAYQ,MACrBC,EAAQR,EAAWO,MACnBE,EAAOR,EAAUM,MACjBG,EAAQ,EAEZ,GAAuB,IAAnBC,SAASF,GAEX,IAAK,IAAIG,EAAQ,EAAGA,GAASN,EAAQM,IACnClB,YAAW,KACVT,EAAc2B,EAAOJ,GACjBK,MAAK,EAAC3B,SAAEA,EAAQC,MAAEA,MACjB2B,EAAA/B,GAASgC,OAAOC,KAAK,uBAAqB9B,QAAiBC,MAAU,IAEtE8B,OAAM,EAAC/B,SAAEA,EAAQC,MAAEA,MAClB2B,EAAA/B,GAASgC,OAAOC,KAAK,sBAAoB9B,QAAiBC,MAAU,GACpE,GACHqB,QAMLN,EAAWgB,aAAY,KAEjBR,GAASJ,GAEXrB,EAAcyB,EAAOF,GAClBK,MAAK,EAAC3B,SAAEA,EAAQC,MAAEA,MACjB2B,EAAA/B,GAASgC,OAAOC,KAAK,uBAAqB9B,QAAiBC,MAAU,IAEtE8B,OAAM,EAAC/B,SAAEA,EAAQC,MAAEA,MAClB2B,EAAA/B,GAASgC,OAAOC,KAAK,sBAAoB9B,QAAeC,MAAU,IAGtEuB,IACAF,EAAQG,SAASH,GAASG,SAASF,IAEnCU,cAAcjB,EAAS,GAExBM,EAAM","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nfunction createPromise(position, delay) {\n  return new Promise((res, rej) => {\n    const shouldResolve = Math.round() > 0.3\n    setTimeout(() => {\n      if (shouldResolve) {\n        res({ position, delay })\n      } else {\n        rej({ position, delay })\n      }\n    }, delay)\n  })\n};\n\nlet getEl = selector => document.querySelector(selector);\nconst inputAmount = getEl('input[name = \"amount\"]');\nconst inputDelay = getEl('input[name = \"delay\"]');\nconst inputStep = getEl('input[name = \"step\"]');\nconst btnSubmit = getEl('button[type = \"submit\"]');\n\nlet amountId\n\nbtnSubmit.addEventListener('click', (event) => {\n  event.preventDefault();\n  let amount = inputAmount.value;\n  let delay = inputDelay.value;\n  let step = inputStep.value;\n  let index = 1;\n\n  if (parseInt(step) === 0) {\n\n    for (let index = 1; index <= amount; index++) {\n      setTimeout(() => {\n       createPromise(index, delay)\n          .then(({ position, delay }) => {\n            Notiflix.Notify.info(`✅ Fulfilled promise ${position} in ${delay}ms`);\n          })\n          .catch(({ position, delay }) => {\n            Notiflix.Notify.info(`❌ Rejected promise ${position} in ${delay}ms`);\n          });\n      }, delay);\n\n    }\n\n  } else {\n\n    amountId = setInterval(() => {\n\n      if (index <= amount) {\n\n        createPromise(index, delay)\n          .then(({ position, delay }) => {\n            Notiflix.Notify.info(`✅ Fulfilled promise ${position} in ${delay}ms`);\n          })\n          .catch(({ position, delay }) => {\n            Notiflix.Notify.info(`❌ Rejected promise ${position} in ${delay}ms`);\n          });\n\n        index++;\n        delay = parseInt(delay) + parseInt(step);\n      } else {\n        clearInterval(amountId)\n      }\n    }, delay);\n  }\n});\n\n\n\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","res","rej","shouldResolve","Math","round","setTimeout","$47d4ff9957288465$var$getEl","selector","document","querySelector","$47d4ff9957288465$var$inputAmount","$47d4ff9957288465$var$inputDelay","$47d4ff9957288465$var$inputStep","$47d4ff9957288465$var$amountId","addEventListener","event","preventDefault","amount","value","delay1","step","index","parseInt","index1","then","$parcel$interopDefault","Notify","info","catch","setInterval","clearInterval"],"version":3,"file":"03-promises.58e5c8fd.js.map"}