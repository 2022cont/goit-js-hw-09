{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GACTC,KAAKC,SAAW,GAGpCC,EAAAP,GAASQ,OAAOC,KAAK,uBAAqBN,QAAiBC,OAG3DG,EAAAP,GAASQ,OAAOC,KAAK,sBAAoBN,QAAeC,M,CAK5D,IAAIM,EAAQC,GAAYC,SAASC,cAAcF,GAC/C,MAAMG,EAAcJ,EAAM,0BACpBK,EAAaL,EAAM,yBACnBM,EAAYN,EAAM,wBAGxB,IAAIO,EAFcP,EAAM,2BAIdQ,iBAAiB,SAAUC,IACnCA,EAAMC,iBACN,IAAIC,EAASP,EAAYQ,MACrBlB,EAAQW,EAAWO,MACnBC,EAAOP,EAAUM,MACjBE,EAAQ,EAEG,IAAIC,SAAQ,KAEzB,GAAuB,IAAnBC,SAASH,GAEX,IAAK,IAAII,EAAQ,EAAGA,GAASN,EAAQM,IACnCC,YAAW,KACT1B,EAAcyB,EAAOvB,EAAM,GAC1BA,QAKLa,EAAWY,aAAY,KAEjBL,GAASH,GACXnB,EAAcsB,EAAOpB,GACrBoB,IACApB,EAAQsB,SAAStB,GAASsB,SAASH,IAEnCO,cAAcb,EAAS,GAGxBb,EAAM,IAOV2B,MAAKC,GAAQzB,EAAAP,GAASQ,OAAOC,KAAKuB,KAClCC,OAAMD,GAAQzB,EAAAP,GAASQ,OAAOC,KAAKuB,IAAM","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n\n    Notiflix.Notify.info(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  } else {\n\n    Notiflix.Notify.info(`❌ Rejected promise ${position} in ${delay}ms`);\n  }\n\n}\n\nlet getEl = selector => document.querySelector(selector);\nconst inputAmount = getEl('input[name = \"amount\"]');\nconst inputDelay = getEl('input[name = \"delay\"]');\nconst inputStep = getEl('input[name = \"step\"]');\nconst btnSubmit = getEl('button[type = \"submit\"]');\n\nlet amountId\n\nbtnSubmit.addEventListener('click', (event) => {\n  event.preventDefault();\n  let amount = inputAmount.value;\n  let delay = inputDelay.value;\n  let step = inputStep.value;\n  let index = 1;\n\n  const promis = new Promise(() => {\n\n    if (parseInt(step) === 0) {\n\n      for (let index = 1; index <= amount; index++) {\n        setTimeout(() => {\n          createPromise(index, delay);\n        }, delay);\n\n      }\n\n    } else {\n      amountId = setInterval(() => {\n\n        if (index <= amount) {\n          createPromise(index, delay);\n          index++;\n          delay = parseInt(delay) + parseInt(step);\n        } else {\n          clearInterval(amountId)\n        }\n\n      }, delay);\n    }\n\n\n  });\n\n  promis\n    .then(data => Notiflix.Notify.info(data))\n    .catch(data => Notiflix.Notify.info(data))\n\n})\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Math","random","$parcel$interopDefault","Notify","info","$47d4ff9957288465$var$getEl","selector","document","querySelector","$47d4ff9957288465$var$inputAmount","$47d4ff9957288465$var$inputDelay","$47d4ff9957288465$var$inputStep","$47d4ff9957288465$var$amountId","addEventListener","event","preventDefault","amount","value","step","index1","Promise","parseInt","index","setTimeout","setInterval","clearInterval","then","data","catch"],"version":3,"file":"03-promises.5fa40e06.js.map"}